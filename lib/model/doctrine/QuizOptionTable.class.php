<?php

/**
 * QuizOptionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class QuizOptionTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object QuizOptionTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('QuizOption');
    }
    
    public function doExecute($params = array())
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
        
        return $q->execute();
    }
    
  
    public function doFetchArray($params = array())
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
                
        return $q->fetchArray();
    }
    
    
    public function doFetchSelection($params = array())
    {
        $res = array();
        $rss = self::doFetchArray($params);
        foreach ($rss as $rs)
        {
          $res[$rs['id']] = $rs['body'];
        }
        return $res;
    }
  
    
    public function doFetchOne($params = array())
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
        return $q->fetchOne();
    }
    
  
    public function doCount($params = array())
    {
        $q = Doctrine_Query::create()->select('count(id)');
        $q = self::params($q, $params);
        return $q->count();
    }
    
    public function getPager($params = array(), $page=1)
    {
        $q = Doctrine_Query::create()->select('*');
        $q = self::params($q, $params);
                
        $pager = new sfDoctrinePager('QuizOption', sfConfig::get('app_pager', 30));
        $pager->setPage($page);
        $pager->setQuery($q);
        $pager->init();
        
        return $pager;
    }
    

    
    private function params($q, $params = array())
    {
        $q->from('QuizOption');
  
        if(isset($params['id']) && $params['id'] != null)
            $q->andWhere('id= ?', $params['id']);
            
        if(isset($params['route']) && $params['route'] != null)
            $q->andWhere('route= ?', $params['route']);
        
        if(isset($params['questionId']) && $params['questionId'] != null)
            $q->andWhere('question_id= ?', $params['questionId']);

        if(isset($params['keyword']) && $params['keyword'])
            $q->andWhere('body LIKE ?', array('%'.$params['keyword'].'%'));

        if(isset($params['point']) && $params['point'] != null)
            $q->andWhere('point = ?', $params['point']);
        
        // group, offset, limit, order
        if(isset($params['groupBy']) && $params['groupBy'])
            $q->groupBy($params['groupBy']);        

        if(isset($params['offset']) && $params['offset'])
            $q->offset($params['offset']);
        
        $limit = isset($params['limit']) ? $params['limit'] : sfConfig::get('app_limit', 30);
        $q->limit($limit);
  
        $order = isset($params['orderBy']) ? $params['orderBy'] : 'point ASC, sort DESC';
        $q->orderBy($order);

        return $q;
    }
    

}