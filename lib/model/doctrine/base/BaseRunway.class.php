<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Runway', 'doctrine');

/**
 * BaseRunway
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $cover
 * @property integer $season_id
 * @property string $season_name
 * @property integer $designer_id
 * @property string $designer_name
 * @property integer $is_featured
 * @property integer $is_active
 * @property integer $sort
 * @property date $date
 * @property timestamp $created_at
 * 
 * @method integer   getId()            Returns the current record's "id" value
 * @method string    getTitle()         Returns the current record's "title" value
 * @method string    getCover()         Returns the current record's "cover" value
 * @method integer   getSeasonId()      Returns the current record's "season_id" value
 * @method string    getSeasonName()    Returns the current record's "season_name" value
 * @method integer   getDesignerId()    Returns the current record's "designer_id" value
 * @method string    getDesignerName()  Returns the current record's "designer_name" value
 * @method integer   getIsFeatured()    Returns the current record's "is_featured" value
 * @method integer   getIsActive()      Returns the current record's "is_active" value
 * @method integer   getSort()          Returns the current record's "sort" value
 * @method date      getDate()          Returns the current record's "date" value
 * @method timestamp getCreatedAt()     Returns the current record's "created_at" value
 * @method Runway    setId()            Sets the current record's "id" value
 * @method Runway    setTitle()         Sets the current record's "title" value
 * @method Runway    setCover()         Sets the current record's "cover" value
 * @method Runway    setSeasonId()      Sets the current record's "season_id" value
 * @method Runway    setSeasonName()    Sets the current record's "season_name" value
 * @method Runway    setDesignerId()    Sets the current record's "designer_id" value
 * @method Runway    setDesignerName()  Sets the current record's "designer_name" value
 * @method Runway    setIsFeatured()    Sets the current record's "is_featured" value
 * @method Runway    setIsActive()      Sets the current record's "is_active" value
 * @method Runway    setSort()          Sets the current record's "sort" value
 * @method Runway    setDate()          Sets the current record's "date" value
 * @method Runway    setCreatedAt()     Sets the current record's "created_at" value
 * 
 * @package    vogue
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRunway extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('runway');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('cover', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('season_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('season_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('designer_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('designer_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_featured', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('sort', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}