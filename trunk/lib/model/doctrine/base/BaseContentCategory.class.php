<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ContentCategory', 'doctrine');

/**
 * BaseContentCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $content_id
 * @property integer $category_id
 * @property Content $Content
 * @property Category $Category
 * 
 * @method integer         getId()          Returns the current record's "id" value
 * @method integer         getContentId()   Returns the current record's "content_id" value
 * @method integer         getCategoryId()  Returns the current record's "category_id" value
 * @method Content         getContent()     Returns the current record's "Content" value
 * @method Category        getCategory()    Returns the current record's "Category" value
 * @method ContentCategory setId()          Sets the current record's "id" value
 * @method ContentCategory setContentId()   Sets the current record's "content_id" value
 * @method ContentCategory setCategoryId()  Sets the current record's "category_id" value
 * @method ContentCategory setContent()     Sets the current record's "Content" value
 * @method ContentCategory setCategory()    Sets the current record's "Category" value
 * 
 * @package    vogue
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContentCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('content_category');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('content_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Content', array(
             'local' => 'content_id',
             'foreign' => 'id'));

        $this->hasOne('Category', array(
             'local' => 'category_id',
             'foreign' => 'id'));
    }
}